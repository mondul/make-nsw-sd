package main

import (
	"bytes"
	"compress/flate"
	"os"
	"path/filepath"
)

var compressed_exo = []byte{
	0x64, 0x8B, 0xC1, 0x6A, 0xC6, 0x20, 0x10, 0x84,
	0xEF, 0x3E, 0x8D, 0x16, 0x7A, 0xF4, 0x49, 0x4A,
	0x59, 0x56, 0x9D, 0x26, 0x52, 0x75, 0x65, 0xD5,
	0x26, 0x7D, 0xFB, 0x12, 0x52, 0xC8, 0xE1, 0xBF,
	0x7D, 0xF3, 0xCD, 0xCC, 0x07, 0x4E, 0x19, 0x7D,
	0x87, 0xE2, 0xD3, 0x24, 0x84, 0xB5, 0x55, 0x49,
	0xF0, 0xEE, 0x61, 0x5A, 0x03, 0xEA, 0xAD, 0x49,
	0x79, 0x70, 0x28, 0x77, 0x24, 0x9C, 0x11, 0x7D,
	0x66, 0x69, 0xB4, 0x73, 0x4B, 0x05, 0x3A, 0xBC,
	0x35, 0x68, 0xCF, 0xA0, 0xD7, 0x45, 0x1C, 0x23,
	0xC6, 0x55, 0x84, 0xC2, 0xED, 0x9B, 0xBA, 0x4A,
	0xCA, 0xED, 0x4B, 0x68, 0xFC, 0x8E, 0x5A, 0xE3,
	0xAB, 0x47, 0x5D, 0x97, 0x77, 0x86, 0x4B, 0x91,
	0x83, 0x0E, 0xCD, 0x33, 0xB7, 0x8D, 0xA6, 0x50,
	0xE4, 0xF2, 0xBC, 0x8A, 0x6C, 0xD4, 0x45, 0xE7,
	0x3F, 0x06, 0x5E, 0x89, 0x94, 0x27, 0xBC, 0x73,
	0xEF, 0x6F, 0xF6, 0x96, 0xB9, 0xFD, 0x40, 0x27,
	0x92, 0xB7, 0x7F, 0x01, 0x00, 0x00, 0xFF, 0xFF,
}

var compressed_hosts = []byte{
	0x7C, 0x93, 0xC1, 0x4E, 0xC3, 0x30, 0x10, 0x44,
	0xEF, 0xF9, 0x0A, 0x4B, 0x88, 0x4B, 0xA5, 0xAE,
	0x92, 0x88, 0x82, 0x7A, 0x86, 0x2B, 0xBD, 0xC0,
	0x0F, 0x04, 0x7B, 0xDB, 0x98, 0xB4, 0xEB, 0xC8,
	0x76, 0x12, 0xD1, 0xAF, 0x47, 0x42, 0x55, 0x69,
	0xDA, 0x9D, 0x5E, 0xE7, 0x6D, 0x66, 0xD7, 0xA3,
	0xCC, 0x83, 0xD9, 0x78, 0xC9, 0x2C, 0x2E, 0x98,
	0xF7, 0xC6, 0x8B, 0xF9, 0xE0, 0x38, 0x72, 0x4C,
	0x45, 0x55, 0xBF, 0x50, 0x49, 0x25, 0x55, 0x66,
	0x21, 0xA7, 0x01, 0x5A, 0x68, 0x6A, 0x9A, 0x7C,
	0xB6, 0xED, 0x9C, 0xD1, 0xF9, 0x13, 0x1B, 0x0E,
	0x3A, 0x10, 0xCE, 0x3A, 0xF8, 0xEE, 0x91, 0xD3,
	0x3D, 0x34, 0x74, 0x2A, 0x5A, 0xF2, 0x10, 0x43,
	0xCF, 0xF0, 0x8C, 0xC9, 0x6F, 0x3D, 0x3E, 0x85,
	0x13, 0xDC, 0xD7, 0x45, 0x1D, 0xE5, 0x09, 0xE6,
	0x40, 0x6D, 0x87, 0x59, 0x33, 0xC0, 0x55, 0x72,
	0xD4, 0x51, 0x03, 0xAE, 0xFE, 0x62, 0x55, 0x77,
	0x89, 0x2C, 0x70, 0x72, 0xE0, 0x30, 0xA7, 0x3B,
	0xD1, 0xD6, 0x03, 0x1D, 0x84, 0xB2, 0x03, 0x7A,
	0x0B, 0x1E, 0xED, 0xC1, 0xCB, 0x64, 0x0F, 0xF4,
	0xA0, 0xEB, 0x3D, 0xF0, 0x89, 0x38, 0xEC, 0x63,
	0xA3, 0xA3, 0x04, 0xA2, 0xB0, 0xAD, 0xAA, 0x9F,
	0x4A, 0x81, 0x7E, 0xBB, 0x7F, 0x4C, 0x56, 0xEE,
	0x4E, 0x48, 0x51, 0x5C, 0x34, 0xF4, 0x93, 0xF7,
	0x7C, 0xE0, 0x1C, 0x7F, 0x94, 0x9A, 0x46, 0xB6,
	0xEC, 0x47, 0x5E, 0x3E, 0x92, 0xDB, 0x51, 0x8A,
	0xE3, 0xAC, 0x6A, 0x17, 0x94, 0xE3, 0x0D, 0x9D,
	0xED, 0x78, 0x7D, 0xDB, 0x9C, 0xDD, 0xD7, 0x2B,
	0xAA, 0xAB, 0x67, 0xAA, 0x9E, 0xD6, 0x54, 0x97,
	0x2B, 0x63, 0x83, 0x48, 0xE6, 0x94, 0x6F, 0xEB,
	0x73, 0x3D, 0xF8, 0x37, 0x65, 0x9D, 0xCC, 0xD7,
	0xFC, 0x06, 0x00, 0x00, 0xFF, 0xFF,
}

func preventBan(outdir string) error {
	// Create the exosph√®re ini file
	exo, err := os.Create(filepath.Join(outdir, "exosphere.ini"))
	if err != nil {
		return err
	}
	defer exo.Close()

	exo_r := flate.NewReader(bytes.NewReader(compressed_exo))
	defer exo_r.Close()
	_, err = exo.ReadFrom(exo_r)
	if err != nil {
		return err
	}

	// Create the hosts file
	hosts_path := filepath.Join(outdir, "atmosphere/hosts/")
	os.MkdirAll(hosts_path, os.ModePerm)
	hosts, err := os.Create(filepath.Join(hosts_path, "default.txt"))
	if err != nil {
		return err
	}
	defer hosts.Close()

	hosts_r := flate.NewReader(bytes.NewReader(compressed_hosts))
	defer hosts_r.Close()
	_, err = hosts.ReadFrom(hosts_r)
	if err != nil {
		return err
	}

	return nil
}
